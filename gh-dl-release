#!/bin/sh
# Based on original work at https://gist.github.com/maxim/6e15aa45ba010ab030c4
#
# USAGE
# gh-dl-release <org/repo> <version or 'latest'> <filename> [<github token>]

set -e

if [ $# -lt 3 ] ;then
    echo "Usage: <org/repo> <version or 'latest'> <filename> [<github token>]"
    exit 1
fi

REPO="$1"
VERSION="$2"                       # tag name or the word "latest"
FILE="$3"      # the name of your release asset file, e.g. build.tar.gz
TOKEN="$4"
GITHUB_API_ENDPOINT="api.github.com"

alias errcho='>&2 echo'

gh_curl() {
  if [ -z "$TOKEN" ]; then
    curl -sL \
       -H "Accept: application/vnd.github.v3.raw" \
       "$@"
  else
    curl -sL -H "Authorization: token $TOKEN" \
       -H "Accept: application/vnd.github.v3.raw" \
       "$@"
  fi
}

gh_get_asset() {
  if [ -z "$TOKEN" ]; then
    curl -sL -H 'Accept: application/octet-stream' https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/assets/$1
  else
    curl -sL -H "Authorization: token $TOKEN" -H 'Accept: application/octet-stream' https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/assets/$1
  fi
}

if [ "$VERSION" = "latest" ]; then
  RELASE_URL="https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/latest"
else
  RELASE_URL="https://$GITHUB_API_ENDPOINT/repos/$REPO/releases/tags/$VERSION"
fi

PARSER=".assets | map(select(.name == \"$FILE\"))[0].id"

ASSET_ID=`gh_curl $RELASE_URL | jq "$PARSER"`
if [ "$ASSET_ID" = "null" ]; then
  errcho "ERROR: version not found $VERSION"
  exit 1
fi

gh_get_asset $ASSET_ID > "$FILE"
